{"version":3,"file":"filtering-eb09d685.nomodule.js","sources":["../../src/scripts/lib/filters/filtering.js"],"sourcesContent":["import { qsa } from '@fluorescent/dom';\n\nimport { emit } from '@/glow/events';\n\nconst filtering = container => {\n  const forms = qsa('[data-filter-form]', container);\n  let formData, searchParams;\n  setParams();\n\n  function setParams(form) {\n    form = form || forms[0];\n    formData = new FormData(form);\n    searchParams = new URLSearchParams(formData).toString();\n  }\n\n  /**\n   * Takes the updated form element and updates all other forms with the updated values\n   * @param {*} target\n   */\n  function syncForms(target) {\n    if (!target) return;\n\n    const targetInputs = qsa('[data-filter-item]', target);\n\n    targetInputs.forEach(targetInput => {\n      if (targetInput.type === 'checkbox' || targetInput.type === 'radio') {\n        const items = qsa(\n          `input[name='${targetInput.name}'][value='${targetInput.value}']`\n        );\n        items.forEach(input => {\n          input.checked = targetInput.checked;\n        });\n      } else {\n        const items = qsa(`input[name='${targetInput.name}']`);\n        items.forEach(input => {\n          input.value = targetInput.value;\n        });\n      }\n    });\n  }\n\n  /**\n   * When filters are removed, set the checked attribute to false\n   * for all filter inputs for that filter.\n   * Can accept multiple filters\n   * @param {Array} targets Array of inputs\n   */\n  function uncheckFilters(targets) {\n    if (!targets) return;\n\n    let selector;\n\n    targets.forEach(target => {\n      selector = !selector ? '' : `, ${selector}`;\n      const { name, value } = target.dataset;\n      selector = `input[name='${name}'][value='${value}']${selector}`;\n    });\n\n    const inputs = qsa(selector, container);\n\n    inputs.forEach(input => {\n      input.checked = false;\n    });\n  }\n\n  function clearRangeInputs() {\n    const rangeInputs = qsa('[data-range-input]', container);\n    rangeInputs.forEach(input => {\n      input.value = '';\n    });\n  }\n\n  function resetForms() {\n    forms.forEach(form => {\n      form.reset();\n    });\n  }\n\n  return {\n    getState() {\n      return {\n        url: searchParams,\n      };\n    },\n\n    filtersUpdated(target, cb) {\n      syncForms(target);\n      setParams(target);\n      emit('filters:updated');\n      return cb(this.getState());\n    },\n\n    removeFilters(target, cb) {\n      uncheckFilters(target);\n      setParams();\n      emit('filters:filter-removed');\n      return cb(this.getState());\n    },\n\n    removeRange(cb) {\n      clearRangeInputs();\n      setParams();\n      emit('filters:range-removed');\n      return cb(this.getState());\n    },\n\n    clearAll(cb) {\n      searchParams = '';\n      resetForms();\n\n      return cb(this.getState());\n    },\n  };\n};\n\nexport default filtering;\n"],"names":["container","forms","qsa","formData","searchParams","setParams","form","FormData","URLSearchParams","toString","getState","url","filtersUpdated","target","cb","forEach","targetInput","type","name","value","input","checked","syncForms","emit","this","removeFilters","targets","selector","dataset","uncheckFilters","removeRange","clearAll","reset"],"mappings":"6JAIkBA,UACVC,EAAQC,EAAI,qBAAsBF,OACpCG,EAAUC,WAGLC,EAAUC,GACjBA,EAAOA,GAAQL,EAAM,GACrBE,EAAW,IAAII,SAASD,GACxBF,EAAe,IAAII,gBAAgBL,GAAUM,kBAL/CJ,IAuEO,CACLK,SAAQ,KACC,CACLC,IAAKP,IAITQ,eAAeC,EAAQC,mBAlEND,OACZA,EAAQ,OAEQX,EAAI,qBAAsBW,GAElCE,SAAQC,IACM,aAArBA,EAAYC,MAA4C,UAArBD,EAAYC,KACnCf,EACX,eAAcc,EAAYE,iBAAiBF,EAAYG,WAEpDJ,SAAQK,IACZA,EAAMC,QAAUL,EAAYK,WAGhBnB,EAAK,eAAcc,EAAYE,UACvCH,SAAQK,IACZA,EAAMD,MAAQH,EAAYG,YAmD9BG,CAAUT,GACVR,EAAUQ,GACVU,EAAK,mBACET,EAAGU,KAAKd,aAGjBe,cAAcZ,EAAQC,mBA7CAY,OACjBA,EAAS,WAEVC,EAEJD,EAAQX,SAAQF,IACdc,EAAYA,EAAiB,KAAIA,IAAV,SACjBT,KAAEA,EAAFC,MAAQA,GAAUN,EAAOe,QAC/BD,EAAY,eAAcT,cAAiBC,MAAUQ,OAGxCzB,EAAIyB,EAAU3B,GAEtBe,SAAQK,IACbA,EAAMC,SAAU,KAgChBQ,CAAehB,GACfR,IACAkB,EAAK,0BACET,EAAGU,KAAKd,aAGjBoB,YAAYhB,UAjCQZ,EAAI,qBAAsBF,GAClCe,SAAQK,IAClBA,EAAMD,MAAQ,MAiCdd,IACAkB,EAAK,yBACET,EAAGU,KAAKd,aAGjBqB,SAASjB,UACPV,EAAe,GAlCjBH,EAAMc,SAAQT,IACZA,EAAK0B,WAoCElB,EAAGU,KAAKd"}